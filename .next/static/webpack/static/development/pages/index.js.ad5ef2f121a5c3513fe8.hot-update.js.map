{"version":3,"file":"static/webpack/static/development/pages/index.js.ad5ef2f121a5c3513fe8.hot-update.js","sources":["webpack:///./src/pages/index.tsx"],"sourcesContent":["import { withApollo } from '../lib/apollo';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\ninterface RocketInventoryData {\n  authUser: {\n    name: string;\n  };\n}\n\ninterface RocketInventoryVars {\n  login: string;\n  password: string;\n}\n\nexport const ALL_POSTS_QUERY = gql`\n  query($login: String, $password: String) {\n    authUser(login: $login, password: $password){\n      name\n    }\n  }\n`\n\nconst IndexPage = (props) => {\n  const { data: { authUser: { name } } } = useQuery<RocketInventoryData, RocketInventoryVars>(ALL_POSTS_QUERY, { variables: { login: 'log', password: \"pas\" } });\n  return <div>Welcome to Next.js!{name}</div>;\n}\n\nexport default withApollo(IndexPage, {\n  // Disable apollo ssr fetching in favour of automatic static optimization\n  ssr: false,\n})\n\n// interface Flavoring<FlavorT> {\n//   _type?: FlavorT;\n// }\n\n// export type Flavor<T, FlavorT> = T & Flavoring<FlavorT>;\n\n// export type UserID = Flavor<string, 'User'>;\n\n// export type User = {\n//   name: string;\n// }\n// remove"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAaA;AACA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAMA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;;;;A","sourceRoot":""}