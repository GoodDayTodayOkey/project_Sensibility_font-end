{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/home/main/Work/project_Sensibility_font-end/src/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withApollo } from '../lib/apollo';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nexport const ALL_POSTS_QUERY = gql`\n  query($login: String, $password: String) {\n    authUser(login: $login, password: $password){\n      name\n    }\n  }\n`;\n\nconst IndexPage = props => {\n  const {\n    loading,\n    error,\n    data,\n    fetchMore,\n    networkStatus\n  } = useQuery(ALL_POSTS_QUERY, {\n    variables: {\n      login: 'log',\n      password: \"pas\"\n    }\n  });\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Welcome to Next.js!\", _JSON$stringify(data, data2));\n};\n\nexport default withApollo(IndexPage, {\n  // Disable apollo ssr fetching in favour of automatic static optimization\n  ssr: false\n});","map":{"version":3,"sources":["/home/main/Work/project_Sensibility_font-end/src/pages/index.tsx"],"names":["withApollo","useQuery","gql","ALL_POSTS_QUERY","IndexPage","props","loading","error","data","fetchMore","networkStatus","variables","login","password","data2","ssr"],"mappings":";;;;AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAO,MAAMC,eAAe,GAAGD,GAAI;;;;;;CAA5B;;AAQP,MAAME,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,IAAlB;AAAwBC,IAAAA,SAAxB;AAAmCC,IAAAA;AAAnC,MAAqDT,QAAQ,CAACE,eAAD,EAAkB;AAAEQ,IAAAA,SAAS,EAAE;AAAEC,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,QAAQ,EAAE;AAA1B;AAAb,GAAlB,CAAnE;AACA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAyB,gBAAeL,IAAf,EAAqBM,KAArB,CAAzB,CAAP;AACD,CAHD;;AAKA,eAAed,UAAU,CAACI,SAAD,EAAY;AACnC;AACAW,EAAAA,GAAG,EAAE;AAF8B,CAAZ,CAAzB","sourcesContent":["import { withApollo } from '../lib/apollo';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nexport const ALL_POSTS_QUERY = gql`\n  query($login: String, $password: String) {\n    authUser(login: $login, password: $password){\n      name\n    }\n  }\n`\n\nconst IndexPage = (props) => {\n  const { loading, error, data, fetchMore, networkStatus } = useQuery(ALL_POSTS_QUERY, { variables: { login: 'log', password: \"pas\" } });\n  return <div>Welcome to Next.js!{JSON.stringify(data, data2)}</div>;\n}\n\nexport default withApollo(IndexPage, {\n  // Disable apollo ssr fetching in favour of automatic static optimization\n  ssr: false,\n})"]},"metadata":{},"sourceType":"module"}