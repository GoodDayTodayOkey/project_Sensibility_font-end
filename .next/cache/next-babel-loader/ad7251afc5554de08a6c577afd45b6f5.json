{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/main/Work/project_Sensibility_font-end/src/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($login: String, $password: String) {\\n    authUser(login: $login, password: $password){\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { withApollo } from '../lib/apollo';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nexport var ALL_POSTS_QUERY = gql(_templateObject());\n\nvar IndexPage = function IndexPage(props) {\n  var _useQuery = useQuery(ALL_POSTS_QUERY, {\n    variables: {\n      login: 'log',\n      password: \"pas\"\n    }\n  }),\n      data = _useQuery.data;\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Welcome to Next.js!\", _JSON$stringify(data.authUser.name));\n};\n\nexport default withApollo(IndexPage, {\n  // Disable apollo ssr fetching in favour of automatic static optimization\n  ssr: false\n});","map":{"version":3,"sources":["/home/main/Work/project_Sensibility_font-end/src/pages/index.tsx"],"names":["withApollo","useQuery","gql","ALL_POSTS_QUERY","IndexPage","props","variables","login","password","data","authUser","name","ssr"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAaA,OAAO,IAAMC,eAAe,GAAGD,GAAH,mBAArB;;AAQP,IAAME,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAAA,kBACVJ,QAAQ,CAA2CE,eAA3C,EAA4D;AAAEG,IAAAA,SAAS,EAAE;AAAEC,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,QAAQ,EAAE;AAA1B;AAAb,GAA5D,CADE;AAAA,MACnBC,IADmB,aACnBA,IADmB;;AAE3B,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAyB,gBAAeA,IAAI,CAACC,QAAL,CAAcC,IAA7B,CAAzB,CAAP;AACD,CAHD;;AAKA,eAAeX,UAAU,CAACI,SAAD,EAAY;AACnC;AACAQ,EAAAA,GAAG,EAAE;AAF8B,CAAZ,CAAzB","sourcesContent":["import { withApollo } from '../lib/apollo';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\ninterface RocketInventoryData {\n  authUser: {\n    name: string;\n  };\n}\n\ninterface RocketInventoryVars {\n  login: string;\n  password: string;\n}\n\nexport const ALL_POSTS_QUERY = gql`\n  query($login: String, $password: String) {\n    authUser(login: $login, password: $password){\n      name\n    }\n  }\n`\n\nconst IndexPage = (props) => {\n  const { data } = useQuery<RocketInventoryData, RocketInventoryVars>(ALL_POSTS_QUERY, { variables: { login: 'log', password: \"pas\" } });\n  return <div>Welcome to Next.js!{JSON.stringify(data.authUser.name)}</div>;\n}\n\nexport default withApollo(IndexPage, {\n  // Disable apollo ssr fetching in favour of automatic static optimization\n  ssr: false,\n})"]},"metadata":{},"sourceType":"module"}